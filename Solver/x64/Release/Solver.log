  ComFun.cpp
D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25): error C2678: binary '[': no operator found which takes a left-hand operand of type 'const Vector<double>' (or there is no acceptable conversion)
  (compiling source file 'Src/ComFun.cpp')
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(72,8):
  could be 'T &Vector<T>::operator [](int)'
          with
          [
              T=double
          ]
  	D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  	'T &Vector<T>::operator [](int)': cannot convert 'this' pointer from 'const Vector<double>' to 'Vector<double> &'
          with
          [
              T=double
          ]
  		D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  		Conversion loses qualifiers
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  while trying to match the argument list '(const Vector<double>, int)'
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  the template instantiation context (the oldest one first) is
  	D:\workspace\trunk\Solver\Solver\Include\Node.h(18,20):
  	see reference to class template instantiation 'Vector<double>' being compiled
  	D:\workspace\trunk\Solver\Solver\Include\Vector.h(25,5):
  	while compiling class template member function 'Vector<double>::Vector(const Vector<double> &)'
  		D:\workspace\trunk\Solver\Solver\Include\Node.h(19,1):
  		see the first reference to 'Vector<double>::Vector' in 'Node::Node'
  
  LaplacePrepare.cpp
D:\workspace\trunk\Solver\Solver\Include\Triangle.h(7,23): warning C4275: non dll-interface class 'ELement' used as base for dll-interface class 'Triangle'
  (compiling source file 'Src/LaplacePrepare.cpp')
  D:\workspace\trunk\Solver\Solver\Include\Element.h(2,7):
  see declaration of 'ELement'
  D:\workspace\trunk\Solver\Solver\Include\Triangle.h(7,5):
  see declaration of 'Triangle'
  
D:\workspace\trunk\Solver\Solver\Include\Triangle.h(21,20): warning C4251: 'Triangle::m_data': class 'Matrix<double>' needs to have dll-interface to be used by clients of class 'Triangle'
  (compiling source file 'Src/LaplacePrepare.cpp')
  D:\workspace\trunk\Solver\Solver\Include\Matrix.h(8,7):
  see declaration of 'Matrix<double>'
  
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(34,28): error C2039: 'GetVecNodes': is not a member of 'Mesh'
  D:\workspace\trunk\Solver\Solver\Include\Mesh.h(11,7):
  see declaration of 'Mesh'
  
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27): error C2440: '<function-style-cast>': cannot convert from '_Ty' to 'Node'
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27): error C2440:         with
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27): error C2440:         [
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27): error C2440:             _Ty=int
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27): error C2440:         ]
  D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27):
  'Node::Node': no overloaded function could convert all the argument types
  	D:\workspace\trunk\Solver\Solver\Include\Node.h(19,1):
  	could be 'Node::Node(const Node &)'
  		D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27):
  		'Node::Node(const Node &)': cannot convert argument 1 from '_Ty' to 'const Node &'
          with
          [
              _Ty=int
          ]
  			D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  			Reason: cannot convert from '_Ty' to 'const Node'
          with
          [
              _Ty=int
          ]
  	D:\workspace\trunk\Solver\Solver\Include\Node.h(8,5):
  	or       'Node::Node(std::pair<double,double>)'
  		D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27):
  		'Node::Node(std::pair<double,double>)': cannot convert argument 1 from '_Ty' to 'std::pair<double,double>'
          with
          [
              _Ty=int
          ]
  			D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  			'std::pair<double,double>::pair': no overloaded function could convert all the argument types
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(254,5):
  				could be 'std::pair<double,double>::pair(std::pair<double,double> &&)'
  					D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  					'std::pair<double,double>::pair(std::pair<double,double> &&)': cannot convert argument 1 from '_Ty' to 'std::pair<double,double> &&'
          with
          [
              _Ty=int
          ]
  						D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  						Reason: cannot convert from '_Ty' to 'std::pair<double,double>'
          with
          [
              _Ty=int
          ]
  						D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  						Conversion requires a second user-defined-conversion operator or constructor
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(253,5):
  				or       'std::pair<double,double>::pair(const std::pair<double,double> &)'
  					D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  					'std::pair<double,double>::pair(const std::pair<double,double> &)': cannot convert argument 1 from '_Ty' to 'const std::pair<double,double> &'
          with
          [
              _Ty=int
          ]
  						D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  						Reason: cannot convert from '_Ty' to 'const std::pair<double,double>'
          with
          [
              _Ty=int
          ]
  						D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  						Conversion requires a second user-defined-conversion operator or constructor
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(312,5):
  				or       'std::pair<double,double>::pair(std::piecewise_construct_t,std::tuple<_Types1...>,std::tuple<_Types2...>)'
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(308,5):
  				or       'std::pair<double,double>::pair(_Tuple1 &,_Tuple2 &,std::integer_sequence<size_t,_Indices1...>,std::integer_sequence<size_t,_Indices2...>)'
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(275,5):
  				or       'std::pair<double,double>::pair(std::pair<_Other1,_Other2> &&) noexcept(<expr>)'
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(268,5):
  				or       'std::pair<double,double>::pair(const std::pair<_Other1,_Other2> &) noexcept(<expr>)'
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(247,5):
  				or       'std::pair<double,double>::pair(_Other1 &&,_Other2 &&) noexcept(<expr>)'
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(236,5):
  				or       'std::pair<double,double>::pair(const _Ty1 &,const _Ty2 &) noexcept(<expr>)'
          with
          [
              _Ty1=double,
              _Ty2=double
          ]
  				C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\utility(228,5):
  				or       'std::pair<double,double>::pair(void) noexcept(<expr>)'
  				D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,33):
  				while trying to match the argument list '(_Ty)'
          with
          [
              _Ty=int
          ]
  	D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,27):
  	while trying to match the argument list '(_Ty)'
          with
          [
              _Ty=int
          ]
  
D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,22): error C2661: 'Triangle::Triangle': no overloaded function takes 2 arguments
  D:\workspace\trunk\Solver\Solver\Src\LaplacePrepare.cpp(38,22):
  while trying to match the argument list '(_Ty, _Ty)'
          with
          [
              _Ty=int
          ]
  
  Mesh.cpp
D:\workspace\trunk\Solver\Solver\Src\Mesh.cpp(27,24): warning C4477: 'fscanf_s' : format string '%f' requires an argument of type 'float *', but variadic argument 2 has type 'double *'
  D:\workspace\trunk\Solver\Solver\Src\Mesh.cpp(27,24):
  consider using '%lf' in the format string
  
D:\workspace\trunk\Solver\Solver\Src\Mesh.cpp(27,24): warning C4477: 'fscanf_s' : format string '%f' requires an argument of type 'float *', but variadic argument 3 has type 'double *'
  D:\workspace\trunk\Solver\Solver\Src\Mesh.cpp(27,24):
  consider using '%lf' in the format string
  
D:\workspace\trunk\Solver\Solver\Src\Mesh.cpp(55,25): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
  SolverData.cpp
  Vector.cpp
D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25): error C2678: binary '[': no operator found which takes a left-hand operand of type 'const Vector<std::complex<double>>' (or there is no acceptable conversion)
  (compiling source file 'Src/Vector.cpp')
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(72,8):
  could be 'T &Vector<T>::operator [](int)'
          with
          [
              T=std::complex<double>
          ]
  	D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  	'T &Vector<T>::operator [](int)': cannot convert 'this' pointer from 'const Vector<std::complex<double>>' to 'Vector<std::complex<double>> &'
          with
          [
              T=std::complex<double>
          ]
  		D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  		Conversion loses qualifiers
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  while trying to match the argument list '(const Vector<std::complex<double>>, int)'
  D:\workspace\trunk\Solver\Solver\Include\Vector.h(31,25):
  the template instantiation context (the oldest one first) is
  	D:\workspace\trunk\Solver\Solver\Src\Vector.cpp(21,26):
  	see reference to function template instantiation 'std::complex<double> dot_product<std::complex<double>>(Vector<std::complex<double>> &,Vector<std::complex<double>> &)' being compiled
  	D:\workspace\trunk\Solver\Solver\Src\Vector.cpp(27,25):
  	see reference to class template instantiation 'Vector<std::complex<double>>' being compiled
  	D:\workspace\trunk\Solver\Solver\Include\Vector.h(25,5):
  	while compiling class template member function 'Vector<std::complex<double>>::Vector(const Vector<std::complex<double>> &)'
  		D:\workspace\trunk\Solver\Solver\Src\Vector.cpp(48,5):
  		see the first reference to 'Vector<std::complex<double>>::Vector' in 'cross_product'
  
